const requireAdmin = require('../../permissions/requireAdmin');
const { ensureGuildJSON, readJSON } = require('../../fileHelper');

module.exports = {
  customId: 'totusuna_config_select',

  handle: requireAdmin(async (interaction) => {
    try {
      const guild = interaction.guild;
      const selectedValue = interaction.values[0];

      const filePath = await ensureGuildJSON(guild.id);
      const data = await readJSON(filePath);

      // 驕ｸ謚槭＆繧後◆蜃ｸ繧ｹ繝願ｨｭ螳壹ｒ蜿門ｾ・
      const totusuna = data.totusuna_list?.find(item => item.messageId === selectedValue);
      
      if (!totusuna) {
        await interaction.reply({
          content: '笶・驕ｸ謚槭＆繧後◆蜃ｸ繧ｹ繝翫ョ繝ｼ繧ｿ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ縲・,
          ephemeral: true
        });
        return;
      }

      // 險ｭ螳夂ｷｨ髮・判髱｢繧定｡ｨ遉ｺ
      await interaction.reply({
        content: `肌 **${totusuna.body || '譛ｬ譁・悴險ｭ螳・}** 縺ｮ險ｭ螳壹ｒ邱ｨ髮・〒縺阪∪縺吶・n\n` +
                 `**繝｡繧､繝ｳ繝√Ε繝ｳ繝阪Ν:** <#${totusuna.mainChannelId}>\n` +
                 `**隍・｣ｽ繝√Ε繝ｳ繝阪Ν:** ${totusuna.replicateChannelIds?.length ? totusuna.replicateChannelIds.map(id => `<#${id}>`).join(', ') : '譛ｪ險ｭ螳・}`,
        ephemeral: true
      });

    } catch (error) {
      console.error('totusuna_config_select蜃ｦ逅・お繝ｩ繝ｼ:', error);
      
      if (!interaction.replied && !interaction.deferred) {
        await interaction.reply({
          content: '笶・險ｭ螳夊｡ｨ遉ｺ荳ｭ縺ｫ繧ｨ繝ｩ繝ｼ縺檎匱逕溘＠縺ｾ縺励◆縲・,
          ephemeral: true
        });
      } else {
        await interaction.followUp({
          content: '笶・險ｭ螳夊｡ｨ遉ｺ荳ｭ縺ｫ繧ｨ繝ｩ繝ｼ縺檎匱逕溘＠縺ｾ縺励◆縲・,
          ephemeral: true
        });
      }
    }
  })
};
